#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: Mod from P3TERX
#=================================================

name: Build R2S OpenWrt opt

on:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - '.config'
  schedule:
    - cron: 10 15 * * *
  watch:
    types: started

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: r2s_opt.config
  DIY_SH: r2s_diy.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d
        sudo apt-get update
        sudo apt-get -y --no-install-recommends install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf python3
        curl https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh  | sed '/#/d' | sed 's/\\//g' | sed 's/exit 0//g' | sed 's/sudo apt -y install//g' | sed 's/sudo apt-get -y install//g' | sed 's/:i386//g' | xargs sudo apt-get -y --no-install-recommends install
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk

    - name: Install Friendlyarm repo
      run: |
        git clone https://github.com/friendlyarm/repo
        sudo cp repo/repo /usr/bin/
        
    - name: Init Source
      run: |
        rm -rf friendlywrt-rk3328
        mkdir friendlywrt-rk3328
        cd friendlywrt-rk3328
        repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v19.07.1 -m rk3328.xml --repo-url=https://github.com/friendlyarm/repo --no-clone-bundle
        repo sync -c --no-clone-bundle
        #cd friendlywrt/ && git fetch --unshallow
         
    - name: Patch Kernel
      run: |
        . r2s/patch_kernel_5.4.sh
        
    - name: Mods
      run: |
        cd friendlywrt-rk3328
        . ../r2s/remove_unused_config.sh
        cat configs/config_rk3328 | grep "TARGET" >> ../r2s/base_rk3328.seed  
        cat ../$CONFIG_FILE >> ../r2s/base_rk3328.seed
        cat ../r2s/base_rk3328.seed > configs/config_rk3328
        cd friendlywrt
        git config --local user.email "action@github.com" && git config --local user.name "GitHub Action"
        git remote add upstream $REPO_URL && git fetch upstream
        git rebase adc1a9a3676b8d7be1b48b5aed185a94d8e42728^ --onto upstream/master -X theirs
        git revert --no-edit f092ca098e80c667b10cdd1dba328506a2673c1d
        git checkout upstream/master -- feeds.conf.default
        git apply ../../r2s/enable_autocore.diff
        . ../../$DIY_SH
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "::set-env name=useVersionInfo::$useVersionInfo"
        echo "::set-env name=DATE::$(date "+%Y-%m-%d %H:%M:%S")"
            
    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: Build FriendlyWrt
      run: |
        cd friendlywrt-rk3328
        sed -i 's/set -eu/set -u/' scripts/mk-friendlywrt.sh
        ./build.sh nanopi_r2s.mk

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        rm -rf ./artifact/
        mkdir -p ./artifact/
        mv friendlywrt-rk3328/out/*img* ./artifact/
        #cp friendlywrt-rk3328/friendlywrt/.config ./friendlywrt-rk3328/out/
        #cd friendlywrt-rk3328/out
        cd ./artifact/
        gzip *.img
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"
        Release_tag="NanoPi-R2S-Lean-${{ env.DATE }}-opt"
        echo "##[set-output name=Release_tag;]$Release_tag"

    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt_firmware
        path: ${{ env.FIRMWARE }}

        
    - name: Create release
      id: create_release
      uses: ncipollo/release-action@v1.6.1
      with:
        name: ${{ env.DATE }}  | R2S定制版 自动编译
        allowUpdates: true
        replacesArtifacts: true
        tag: ${{ env.DATE }}
        commit: master
        token: ${{ secrets.RELEASES_TOKEN }}
        body: |
          R2S定制版，包含SSRP、OPENVPN、Zerotier、Transimission、Diskman
          当前版本:
          ${{ env.useVersionInfo }}
        artifacts: ${{ env.FIRMWARE }}/*.gz

#    - name: Upload Release Asset
#      id: upload-release-asset
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
#      with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ${{ env.FIRMWARE }}/*.img.gz
#          asset_name: ${{ steps.organize.outputs.Release_tag }}-arm64_sd.img.gz
#          asset_content_type: application/gzip

#    - name: Create Release
#      id: create_release
#      uses: actions/create-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}
#      with:
#        tag_name: ${{ steps.organize.outputs.Release_tag }}
#        release_name: R2S 定制版自动发布${{ steps.assemble_artifact.outputs.Release_tag }}
#        body: |
#          Openwrt R2S定制版
#          源码信息:
#          ${{ env.useVersionInfo }}
#        draft: false
#        prerelease: false
          
#    - name: Upload Release Asset
#      uses: svenstaro/upload-release-action@v1-release
#      with:
#        repo_token: ${{ secrets.RELEASES_TOKEN }}
#        file: ${{ env.FIRMWARE }}/*.img.gz 
#        tag: ${{ steps.organize.outputs.Release_tag }}
#        overwrite: true
#        file_glob: true   
